/**
 * 享元模式
 * 以共享的方式高效地支持大量的细粒度对象。享元模式能做到共享的关键是其区分了内蕴状态和外蕴状态
 * <p>
 * 内蕴状态存储在享元内部，不会随环境的改变而有所改变
 * 外蕴状态是随环境的改变而改变的
 * <p>
 * 外蕴状态不能影响内蕴状态，他们是相互独立的
 * <p>
 * 将可以共享的状态和不可以共享的状态从常规类中区分开来，将不可共享的状态从类中剔除。
 * <p>
 * 客户端不可以直接创建被共享的对象，而应当使用一个工厂对象负责创建被共享的对象。
 * <p>
 * 享元模式大幅度降低了内存中对象的数量
 */
package com.sample.gof23.service.structuralpattern.flyweight;